{"ast":null,"code":"var _jsxFileName = \"/Users/saminmalik/Desktop/Top5Lists_HW3/Top5Lists_HW3/client/src/components/Top5Item.js\",\n    _s = $RefreshSig$();\n\nimport { React, useContext, useState } from \"react\";\nimport { GlobalStoreContext } from '../store';\n/*\n    This React component represents a single item in our\n    Top 5 List, which can be edited or moved around.\n    \n    @author McKilla Gorilla\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Top5Item(props) {\n  _s();\n\n  const {\n    store\n  } = useContext(GlobalStoreContext);\n  const [draggedTo, setDraggedTo] = useState(0);\n\n  function handleDragStart(event) {\n    event.dataTransfer.setData(\"item\", event.target.id);\n  }\n\n  function handleDragOver(event) {\n    event.preventDefault();\n  }\n\n  function handleDragEnter(event) {\n    event.preventDefault();\n    setDraggedTo(true);\n  }\n\n  function handleDragLeave(event) {\n    event.preventDefault();\n    setDraggedTo(false);\n  }\n\n  function handleDrop(event) {\n    event.preventDefault();\n    let target = event.target;\n    let targetId = target.id;\n    targetId = targetId.substring(target.id.indexOf(\"-\") + 1);\n    let sourceId = event.dataTransfer.getData(\"item\");\n    sourceId = sourceId.substring(sourceId.indexOf(\"-\") + 1);\n    setDraggedTo(false); // UPDATE THE LIST\n\n    store.addMoveItemTransaction(sourceId, targetId);\n  } //---------------\n\n\n  function handleToggleEdit(event) {\n    event.stopPropagation();\n    toggleEdit();\n  }\n\n  function toggleEdit() {\n    let newActive = !editActive;\n\n    if (newActive) {\n      store.setIsListNameEditActive();\n    }\n\n    setEditActive(newActive);\n  }\n\n  function handleKeyPress(event) {\n    if (event.code === \"Enter\") {\n      let id = event.target.id.substring(\"list-\".length);\n      store.changeListName(id, text);\n      toggleEdit();\n    }\n  }\n\n  function handleUpdateText(event) {\n    setText(event.target.value);\n  } //----------------\n\n\n  let {\n    index\n  } = props;\n  let itemClass = \"top5-item\";\n\n  if (draggedTo) {\n    itemClass = \"top5-item-dragged-to\";\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: 'item-' + (index + 1),\n    className: itemClass,\n    onDragStart: handleDragStart,\n    onDragOver: handleDragOver,\n    onDragEnter: handleDragEnter,\n    onDragLeave: handleDragLeave,\n    onDrop: handleDrop,\n    draggable: \"true\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      id: \"edit-item-\" + index + 1,\n      className: \"list-card-button\",\n      value: \"\\u270E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), props.text]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Top5Item, \"HLZXCl0yEtBjUwNOHlALkqUthp4=\");\n\n_c = Top5Item;\nexport default Top5Item;\n\nvar _c;\n\n$RefreshReg$(_c, \"Top5Item\");","map":{"version":3,"sources":["/Users/saminmalik/Desktop/Top5Lists_HW3/Top5Lists_HW3/client/src/components/Top5Item.js"],"names":["React","useContext","useState","GlobalStoreContext","Top5Item","props","store","draggedTo","setDraggedTo","handleDragStart","event","dataTransfer","setData","target","id","handleDragOver","preventDefault","handleDragEnter","handleDragLeave","handleDrop","targetId","substring","indexOf","sourceId","getData","addMoveItemTransaction","handleToggleEdit","stopPropagation","toggleEdit","newActive","editActive","setIsListNameEditActive","setEditActive","handleKeyPress","code","length","changeListName","text","handleUpdateText","setText","value","index","itemClass"],"mappings":"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","sourcesContent":["import { React, useContext, useState } from \"react\";\nimport { GlobalStoreContext } from '../store'\n/*\n    This React component represents a single item in our\n    Top 5 List, which can be edited or moved around.\n    \n    @author McKilla Gorilla\n*/\nfunction Top5Item(props) {\n    const { store } = useContext(GlobalStoreContext);\n    const [draggedTo, setDraggedTo] = useState(0);\n\n    function handleDragStart(event) {\n        event.dataTransfer.setData(\"item\", event.target.id);\n    }\n\n    function handleDragOver(event) {\n        event.preventDefault();\n    }\n\n    function handleDragEnter(event) {\n        event.preventDefault();\n        setDraggedTo(true);\n    }\n\n    function handleDragLeave(event) {\n        event.preventDefault();\n        setDraggedTo(false);\n    }\n\n    function handleDrop(event) {\n        event.preventDefault();\n        let target = event.target;\n        let targetId = target.id;\n        targetId = targetId.substring(target.id.indexOf(\"-\") + 1);\n        let sourceId = event.dataTransfer.getData(\"item\");\n        sourceId = sourceId.substring(sourceId.indexOf(\"-\") + 1);\n        setDraggedTo(false);\n\n        // UPDATE THE LIST\n        store.addMoveItemTransaction(sourceId, targetId);\n    }\n\n    //---------------\n\n    function handleToggleEdit(event) {\n        event.stopPropagation();\n        toggleEdit();\n    }\n\n    function toggleEdit() {\n        let newActive = !editActive;\n        if (newActive) {\n            store.setIsListNameEditActive();\n        }\n        setEditActive(newActive);\n    }\n\n    function handleKeyPress(event) {\n        if (event.code === \"Enter\") {\n            let id = event.target.id.substring(\"list-\".length);\n            store.changeListName(id, text);\n            toggleEdit();\n        }\n    }\n\n    function handleUpdateText(event) {\n        setText(event.target.value );\n    }\n    //----------------\n\n    let { index } = props;\n    let itemClass = \"top5-item\";\n    if (draggedTo) {\n        itemClass = \"top5-item-dragged-to\";\n    }\n    return (\n        <div\n            id={'item-' + (index + 1)}\n            className={itemClass}\n            onDragStart={handleDragStart}\n            onDragOver={handleDragOver}\n            onDragEnter={handleDragEnter}\n            onDragLeave={handleDragLeave}\n            onDrop={handleDrop}\n            draggable=\"true\"\n        >\n            <input\n                type=\"button\"\n                id={\"edit-item-\" + index + 1}\n                className=\"list-card-button\"\n                value={\"\\u270E\"}\n            />\n            {props.text}\n        </div>)\n}\n\nexport default Top5Item;"]},"metadata":{},"sourceType":"module"}